{
  "name": "@catena-x/portal-frontend",
  "version": "v1.7.0",
  "description": "Catena-X Portal Frontend",
  "author": "Catena-X Contributors",
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/eclipse-tractusx/portal-frontend.git"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "lint:staged": {
    "**/*.{js,jsx,ts,tsx}": [
      "yarn test:ci"
    ]
  },
  "dependencies": {
    "@catena-x/portal-shared-components": "^2.1.3",
    "@emotion/react": "^11.11.1",
    "@emotion/styled": "^11.11.0",
    "@hookform/error-message": "^2.0.1",
    "@mui/icons-material": "^5.11.16",
    "@mui/material": "^5.13.4",
    "@react-hook/cache": "^1.1.1",
    "@reduxjs/toolkit": "^1.9.5",
    "@types/papaparse": "^5.3.7",
    "axios": "^1.6.1",
    "buffer": "^6.0.3",
    "dayjs": "^1.11.8",
    "i18next": "^22.5.1",
    "i18next-browser-languagedetector": "^7.0.2",
    "keycloak-js": "^21.1.1",
    "lodash.debounce": "^4.0.8",
    "lodash.uniq": "^4.5.0",
    "nanoid": "^4.0.2",
    "papaparse": "^5.4.1",
    "phone": "^3.1.39",
    "qs": "^6.11.2",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-dropzone": "^14.2.3",
    "react-hook-form": "^7.44.3",
    "react-i18next": "^12.3.1",
    "react-player": "^2.12.0",
    "react-redux": "^8.0.7",
    "react-router-dom": "^6.12.1",
    "sass": "^1.63.3"
  },
  "devDependencies": {
    "@babel/core": "^7.22.5",
    "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
    "@babel/plugin-syntax-flow": "^7.22.5",
    "@babel/plugin-transform-react-jsx": "^7.22.5",
    "@testing-library/dom": "^9.3.0",
    "@testing-library/jest-dom": "^5.14.1",
    "@testing-library/react": "^13.0.0",
    "@testing-library/user-event": "^13.2.1",
    "@types/jest": "^27.0.1",
    "@types/lodash": "^4.14.195",
    "@types/lodash.debounce": "^4.0.7",
    "@types/lodash.uniq": "^4.5.7",
    "@types/node": "^16.7.13",
    "@types/react": "^18.2.11",
    "@types/react-dom": "^18.2.4",
    "@types/react-redux": "^7.1.25",
    "@types/react-slick": "^0.23.10",
    "@typescript-eslint/eslint-plugin": "^5.50.0",
    "@typescript-eslint/parser": "^5.59.9",
    "eslint": "8.37.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-config-standard-with-typescript": "^35.0.0",
    "eslint-plugin-import": "^2.25.2",
    "eslint-plugin-n": "^15.0.0",
    "eslint-plugin-promise": "^6.0.0",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "husky": "^8.0.3",
    "prettier": "^2.8.8",
    "react-scripts": "5.0.1",
    "typescript": "5.0.4"
  },
  "resolutions": {
    "**/nth-check": "^2.1.1",
    "**/@babel/traverse": "^7.23.2"
  },
  "scripts": {
    "prepare": "husky install",
    "build:sources": "zip -r portal-frontend.zip src package.json yarn.lock -x '*.stories.*' -x '*.test.*' -x '*.css' -x '*.scss' -x '*.svg' -x '*.jpg' -x '*.png' -x '*.webp' -x '*.ttf'",
    "pretty": "prettier --write \"**/*.{ts,tsx,js,jsx,json,css,sass,scss,xml,md}\"",
    "lint": "yarn run eslint \"./src/**/*.{ts,tsx}\"",
    "start": "PORT=3001 BROWSER=none GENERATE_SOURCEMAP=false react-scripts start",
    "build": "yarn build:copy-legal-info && GENERATE_SOURCEMAP=false react-scripts build",
    "test": "react-scripts test",
    "test:ci": "CI=true react-scripts test",
    "build:docker": "if [ -d \"./build\" ]; then yarn build:docker:prebuilt; else yarn build:docker:full; fi",
    "build:docker:full": "IMAGE=$npm_package_config_image && docker build -t $IMAGE -f .conf/Dockerfile.full --build-arg \"http_proxy=${http_proxy}\" --build-arg \"https_proxy=${https_proxy}\" --build-arg \"no_proxy=${no_proxy}\" .",
    "build:docker:prebuilt": "IMAGE=$npm_package_config_image && docker build -t $IMAGE -f .conf/Dockerfile.prebuilt . && docker tag $IMAGE:latest $IMAGE:$npm_package_version",
    "start:docker": "IMAGE=$npm_package_config_image  && docker run --rm -d -p 3001:8080 --name cx-portal $IMAGE",
    "publish:docker": "IMAGE=$npm_package_config_image && docker tag $IMAGE:latest $IMAGE:$npm_package_version && docker push $IMAGE:$npm_package_version && docker push $IMAGE:latest",
    "build:legal-notice": "bash scripts/legal-notice.sh",
    "build:copy-legal-info": "cp LICENSE NOTICE.md DEPENDENCIES SECURITY.md public/"
  }
}
